// Code generated by sqlc. DO NOT EDIT.
// source: currency.sql

package db

import (
	"context"
)

const createCurrency = `-- name: CreateCurrency :one
INSERT INTO currencies (
    code
) VALUES (
    $1
) RETURNING id, code, created_at
`

func (q *Queries) CreateCurrency(ctx context.Context, code string) (Currency, error) {
	row := q.db.QueryRowContext(ctx, createCurrency, code)
	var i Currency
	err := row.Scan(&i.ID, &i.Code, &i.CreatedAt)
	return i, err
}

const getCurrencyByCode = `-- name: GetCurrencyByCode :one
SELECT id, code, created_at FROM currencies
WHERE code = $1 LIMIT 1
`

func (q *Queries) GetCurrencyByCode(ctx context.Context, code string) (Currency, error) {
	row := q.db.QueryRowContext(ctx, getCurrencyByCode, code)
	var i Currency
	err := row.Scan(&i.ID, &i.Code, &i.CreatedAt)
	return i, err
}

const getCurrencyByID = `-- name: GetCurrencyByID :one
SELECT id, code, created_at FROM currencies
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetCurrencyByID(ctx context.Context, id int64) (Currency, error) {
	row := q.db.QueryRowContext(ctx, getCurrencyByID, id)
	var i Currency
	err := row.Scan(&i.ID, &i.Code, &i.CreatedAt)
	return i, err
}
